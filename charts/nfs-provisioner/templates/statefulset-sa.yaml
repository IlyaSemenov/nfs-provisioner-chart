kind: Service
apiVersion: v1
metadata:
  name: nfs-provisioner
  labels:
    app: nfs-provisioner
spec:
  ports:
    - name: nfs
      port: 2049
    - name: mountd
      port: 20048
    - name: rpcbind
      port: 111
    - name: rpcbind-udp
      port: 111
      protocol: UDP
  selector:
    app: nfs-provisioner
---
kind: StatefulSet
apiVersion: apps/v1beta1
metadata:
  name: nfs-provisioner
spec:
  serviceName: "nfs-provisioner"
  replicas: 1
  template:
    metadata:
      labels:
        app: nfs-provisioner
      annotations:
        pod.alpha.kubernetes.io/initialized: "true"
    spec:
      serviceAccount: nfs-provisioner
      terminationGracePeriodSeconds: 0
      containers:
        - name: nfs-provisioner
          image: "{{ .Values.image }}"
          ports:
            - name: nfs
              containerPort: 2049
            - name: mountd
              containerPort: 20048
            - name: rpcbind
              containerPort: 111
            - name: rpcbind-udp
              containerPort: 111
              protocol: UDP
          securityContext:
            capabilities:
              add:
                - DAC_READ_SEARCH
                - SYS_RESOURCE
          args:
            - "-provisioner={{ .Values.provisionerName }}"
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: SERVICE_NAME
              value: nfs-provisioner
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          imagePullPolicy: "IfNotPresent"
          volumeMounts:
            - name: export-volume
              mountPath: /export
{{- if eq .Values.provisionerVolume.mode "pvc" }}
  volumeClaimTemplates:
  - metadata:
      name: export-volume
    spec:
      accessModes:
        - "ReadWriteOnce"
      resources:
        requests:
          storage: "{{ .Values.provisionerVolume.settings.storageSize | default "1Gi" }}"
{{- else }}
      volumes:
        - name: export-volume
{{- if eq .Values.provisionerVolume.mode "hostPath" }}
          hostPath:
            path: "{{ .Values.provisionerVolume.settings.path | default "/srv/nfs-provisioner" }}"
{{ else if eq .Values.provisionerVolume.mode "useTmpFs" }}
          emptyDir:
            medium: Memory
{{ else if eq .Values.provisionerVolume.mode "emptyDir" }}
          emptyDir: {}
{{ end }}

{{ end }}


{{ if .Values.hostPath }}{{ fail "hostPath has been removed. Please refer to the README for the migration path." }}{{ end }}
{{ if .Values.useTmpPath }}{{ fail "useTmpPath has been removed. Please refer to the README for the migration path." }}{{ end }}
